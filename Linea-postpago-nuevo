-- --------------------------------------------------------------------------------
-- AUTHOR: GONZALO VILLAFAÑE
-- CREATED: 04/07/2025
-- UPDATED: 19/08/2025 
-- MODIFICATION: SE MODIFICARON TODAS LAS IDENTACIONES Y SE AGREGARON COMENTARIOS, POR FAVOR MANTENERLO ASÍ !!!!!!!!!
-- --------------------------------------------------------------------------------
config {
    type: "table",
    schema: "SILVER",
    name: "DATOS_LINEA_POSTPAGO_TABLE",
    description: "Tabla de unificación de datos lineas de afiliados",
    tags: ["materialization"]
}
-- --------------------------------------------------------------------------------
-- QUERY PRINCIPAL 
-- --------------------------------------------------------------------------------

WITH
    -- TRAE LA FECHA CON LA QUE BUSCA LOS DATOS: CAL_DATE O FECHA DE REPROCESO
    params AS (
    SELECT
        DATE("${require("includes/variables").get_cal_date()}") AS CAL_DATE 
    ),

    -- CTE CONTRACT_UNION
    CONTRACT_UNION AS (        
        (
            -- BUSCA LOS DATOS DE LOS CONTRATOS: TRAE CO_ID Y MSISDN
            SELECT
                CSC_A.CO_ID CO_ID,
                DN_A.DN_NUM MSISDN,
                'NULL' AS IMSI,
                'NULL' AS ICCID,                          -- ESTE CAMPO EN LA QUERY ORIGINAL NO EXISTE 
                NULL AS SIMCARD
            FROM
                etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CONTR_SERVICES_CAP_UP2DT_VIEW CSC_A,
                etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_DIRECTORY_NUMBER_UP2DT_VIEW DN_A
            WHERE
                DN_A.DN_ID = CSC_A.DN_ID
                AND UPPER(CSC_A.MAIN_DIRNUM) = 'X'
                AND CSC_A.cs_deactiv_date IS NULL
                AND CSC_A.SEQNO = (
                    SELECT
                        MAX (SEQNO)
                    FROM
                        etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CONTR_SERVICES_CAP_UP2DT_VIEW CSC_A1
                    WHERE
                        CSC_A.DN_ID = CSC_A1.DN_ID
                        AND CSC_A1.CO_ID = CSC_A.CO_ID
                )
                AND NOT EXISTS (
                    SELECT
                        CSP_A.CO_ID
                    FROM
                        etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CONTR_SERVICES_PORT_UP2DT_VIEW CSP_A
                    WHERE
                        CSP_A.CO_ID = CSC_A.CO_ID
                )
        )

        UNION ALL 
  
        (
            -- CONTRATOS SIN ENTRADAS EN CONTR_SERVICES_CAP NI EN CONTR_SERVICES_PORT
            SELECT
            DISTINCT CTRA.CO_ID,
            'NULL' AS MSISDN,
            'NULL' AS IMSI,
            'NULL' AS ICCID,
            NULL AS SIMCARD
            FROM
            etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CONTRACT_ALL_UP2DT_VIEW CTRA
            WHERE
            CTRA.CO_ID NOT IN (
                SELECT
                DISTINCT CSCA_A2.CO_ID
                FROM
                etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CONTR_SERVICES_CAP_UP2DT_VIEW CSCA_A2
                )
            AND CTRA.CO_ID NOT IN (
                SELECT DISTINCT 
                    CO_ID
                FROM
                    etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CONTR_SERVICES_PORT_UP2DT_VIEW
            )
        )
  
        UNION ALL 
  
        (
            -- CONTRATOS CON JOIN ENTRE CAP(A) Y PORT (B). Se hace un join interno entre construcciones A y B.
            SELECT
                CO_ID_A       AS CO_ID,
                MSISDN_A      AS MSISDN,
                IMSI_B        AS IMSI,
                SM_NUM        AS ICCID,
                SM_ID         AS SIMCARD
            FROM (
                SELECT
                    A.CO_ID         AS CO_ID_A,
                    A.MSISDN        AS MSISDN_A,
                    A.IMSI,
                    B.CO_ID,
                    B.MSISDN,
                    B.IMSI          AS IMSI_B,
                    B.SM_NUM,
                    B.SM_ID
                FROM (
                    -- Subconsulta A: CAP + DIRECTORY -> MSISDN (sin IMSI)
                    SELECT
                        CO_X.CO_ID     AS CO_ID,
                        DN_X.DN_NUM    AS MSISDN,
                        NULL           AS IMSI
                    FROM
                        etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CONTRACT_ALL_UP2DT_VIEW CO_X,
                        etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CONTR_SERVICES_CAP_UP2DT_VIEW CSC_X,
                        etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_DIRECTORY_NUMBER_UP2DT_VIEW DN_X
                    WHERE
                        CSC_X.CO_ID = CO_X.CO_ID
                        AND DN_X.DN_ID = CSC_X.DN_ID
                        AND UPPER(CSC_X.MAIN_DIRNUM) = 'X'
                        AND CSC_X.cs_deactiv_date IS NULL
                        AND CSC_X.SEQNO = (
                            SELECT
                                MAX (SEQNO)
                            FROM
                                etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CONTR_SERVICES_CAP_UP2DT_VIEW CSC_X1
                            WHERE
                                CSC_X1.CO_ID = CSC_X.CO_ID
                                AND CSC_X1.DN_ID = CSC_X.DN_ID
                        )
                ) A,
        
                (
                    -- Subconsulta B: PORT -> IMSI / SM_NUM / SM_ID            
                    SELECT
                        CO_Y.CO_ID CO_ID,
                        NULL MSISDN,
                        P_X.PORT_NUM IMSI,
                        CSP_X.SM_NUM,
                        P_X.SM_ID
                    FROM
                        etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CONTRACT_ALL_UP2DT_VIEW CO_Y,
                        etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CONTR_SERVICES_PORT_UP2DT_VIEW CSP_X,
                        etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_PORT_UP2DT_VIEW P_X
                    WHERE
                        CSP_X.CO_ID = CO_Y.CO_ID
                        AND P_X.PORT_ID = CSP_X.PORT_ID
                        AND UPPER(CSP_X.csp_status) ='A'
                        AND CSP_X.CSP_SEQNO = (
                            SELECT
                                MAX (CSP_SEQNO)
                            FROM
                                etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CONTR_SERVICES_PORT_UP2DT_VIEW CSP_X1
                            WHERE
                                CSP_X1.CO_ID = CSP_X.CO_ID
                                AND CSP_X1.PORT_ID = CSP_X.PORT_ID
                        )
                ) B

                WHERE
                    A.CO_ID = B.CO_ID
            )
        )
    ),

    -- CTE FEINS_LINEA
    FEINS_LINEA AS (
        SELECT
            a.ast_number msisdn,
            a.ast_install_dt fecha_install_linea
        FROM
            etl-service-proj.BDUC_PROD_Zona_Cruda.BDUC_U_ASSET_UP2DT_VIEW a
    ),

    -- CTE CNTT  
    CNTT AS (
        SELECT
            a.ast_number msisdn,
            COUNT(DISTINCT b.customer_id) cant_titulares
        FROM
            etl-service-proj.BDUC_PROD_Zona_Cruda.BDUC_U_ASSET_UP2DT_VIEW a
        INNER JOIN
            etl-service-proj.BDUC_PROD_Zona_Cruda.BDUC_U_ASSET_CUSTOMER_UP2DT_VIEW b
        ON
            b.asset_id = a.asset_id
            AND atc_rl_type_cd='Afiliado'
        GROUP BY
            a.ast_number
    ),

    -- CTE CIBDUC
    CIBDUC AS (
        SELECT
            a.ast_number msisdn,
            b.customer_id
        FROM
            etl-service-proj.BDUC_PROD_Zona_Cruda.BDUC_U_ASSET_UP2DT_VIEW a
        INNER JOIN
            etl-service-proj.BDUC_PROD_Zona_Cruda.BDUC_U_ASSET_CUSTOMER_UP2DT_VIEW b
        ON
            b.asset_id = a.asset_id
            AND atc_rl_type_cd='Afiliado'
    ),

    -- CTE SYSADM_PRICEGROUP_ALL
    SYSADM_PRICEGROUP_ALL AS (
    SELECT
        PRGCODE,
        CAST(PRGSEQNUM AS STRING)AS PRGSEQNUM,
        PRGNAME,
        INGESTION_TIME
    FROM
        etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_PRICEGROUP_ALL_UP2DT_VIEW 
    ),

    -- CTE CANALES
    CANALES AS (
        SELECT
            '58'||SUBSTR(c.component_value,2) MSISDN,
            UPPER(b.display_value) TIPO_ACTIVACION,
            d.channel TIPO_CANAL,
            INITCAP(e.display_value) NOMBRE_CANAL
        FROM
            etl-service-proj.BDUC_PROD_Zona_Cruda.CRM360_IC_ORDER_UP2DT_VIEW a
        LEFT OUTER JOIN
            etl-service-proj.BDUC_PROD_Zona_Cruda.CRM360_IC_ORDER_TYPES_UP2DT_VIEW b
        ON
            b.id_order_type=a.id_order_type
        LEFT OUTER JOIN
            etl-service-proj.BDUC_PROD_Zona_Cruda.CRM360_IC_ORDER_ITEMS_UP2DT_VIEW c
        ON
            c.id_order = a.id_order
            AND id_component='INV-001'
        LEFT OUTER JOIN
            etl-service-proj.BDUC_PROD_Zona_Cruda.CRM360_IC_USER_UP2DT_VIEW d
        ON
            UPPER(d.username)= UPPER(a.created_who)
        LEFT OUTER JOIN
            etl-service-proj.BDUC_PROD_Zona_Cruda.CRM360_IC_USER_LOCALITY_UP2DT_VIEW e
        ON
            CAST(e.id_locality AS STRING) = CAST(SUBSTR(d.location,1,10)AS STRING)
        WHERE
            a.id_order_type IN (
                'OT-001',
                'OT-007',
                'OT-008',
                'OT-009',
                'OT-010',
                'OT-016',
                'OT-026',
                'OT-027',
                'OT-040',
                'OT-034'
            ) 
    ),

  -- CTE TSIM
  TSIM AS (
    SELECT
        PORT_NUM,
        SMC_ID,
        CASE
            WHEN (PORT_NUM >='734021004550000' AND PORT_NUM <= '734021004999999' ) THEN 'ESIM'
            WHEN SMC_ID = 22 THEN 'SIM'
            WHEN SMC_ID = 21 THEN 'SIM Rutero'
            WHEN SMC_ID = 20 THEN 'USIM'
            ELSE NULL
    END AS TIPO_SIMCARD
    FROM (
        SELECT
            port.port_num,
            port.sm_id,
            sm.smc_id
        FROM
            etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_PORT_UP2DT_VIEW port
        INNER JOIN
            etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_STORAGE_MEDIUM_UP2DT_VIEW sm
        ON
            sm.sm_id = port.sm_id
        )
    ),

    -- CTE CONJUNTO
    conjunto AS (
        SELECT
            CUSTOMER_ID,
            CUENTA,
            ID_SUBSCRIPTOR,
            CODIGO_VIP,
            DESC_CODIGO_VIP,
            FECHA_ACTIVACION,
            FECHA_INSTALL_LINEA,
            CANT_TITULARES,
            CURRENCY,
            CICLO_FACTURACION,
            MSISDN,
            IMSI,
            ICCID,
            SIMCARD,
            CODIGO_PLAN,
            PLAN,
            NOMBRES,
            APELLIDOS,
            COMPANY,
            TIPO_IDENTIFICACION,
            IDENTIFICACION,
            PLAN_COMERCIAL,
            TIPO_PRODUCTO,
            SERVICE_STATUS,
            SERVICE_CODE,
            TIPO_ACTIVACION,
            TIPO_CANAL_ACTIVACION,
            CANAL_DE_ACTIVACION,
            TIPO_SIMCARD
        FROM (            
            WITH
            -- CTE Ultimo_BAH
            Ultimo_BAH AS (
                SELECT
                    CUSTOMER_ID,
                    MAX(SEQNO) AS MAX_SEQNO
                FROM
                    etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_BILLCYCLE_ASSIGNMENT_HISTORY_UP2DT_VIEW
                GROUP BY
                    CUSTOMER_ID
            ),

            -- CTE Ultimo_CH
            Ultimo_CH AS (
                SELECT
                    CO_ID,
                    MAX(CH_SEQNO) AS MAX_CH_SEQNO
                FROM
                    etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CONTRACT_HISTORY_UP2DT_VIEW
                GROUP BY
                    CO_ID 
            ),

            -- CTE Ultimo_PSSH
            Ultimo_PSSH AS (
                SELECT
                    CO_ID,
                    SNCODE,
                    MAX(HISTNO) AS MAX_HISTNO
                FROM
                    etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_PR_SERV_STATUS_HIST_UP2DT_VIEW
                GROUP BY
                    CO_ID,
                    SNCODE 
            )

            -- SELECT FINAL DEL CTE DESDE EL FROM QUE COMIENZA EN LA LINEA 320
            SELECT
                CU.CUSTOMER_ID AS CUSTOMER_ID_EB20,
                CIBDUC.CUSTOMER_ID AS CUSTOMER_ID,
                CAST(CU.CUSTNUM AS STRING) AS CUENTA,
                CU.PRGCODE AS CODIGO_VIP,
                PR.PRGNAME AS DESC_CODIGO_VIP,
                CO.CO_ID AS ID_SUBSCRIPTOR,
                CO.CH_STATUS AS ESTATUS_LINEA,
                CO.CO_ACTIVATED AS FECHA_ACTIVACION,
                FEINS_LINEA.FECHA_INSTALL_LINEA,
                CNTT.CANT_TITULARES,
                FC.FCDESC AS CURRENCY,
                BAH.BILLCYCLE AS CICLO_FACTURACION,
                CONTRACT_UNION.MSISDN AS MSISDN,
                CONTRACT_UNION.IMSI AS IMSI,
                CONTRACT_UNION.ICCID AS ICCID,
                CONTRACT_UNION.SIMCARD AS SIMCARD,
                RP.SHDES AS CODIGO_PLAN,
                RP.DES AS PLAN,
                INITCAP(cca.ccfname) AS NOMBRES,
                INITCAP(cca.cclname) AS APELLIDOS,
                INITCAP(ccname) AS COMPANY,    
                COALESCE(ccfname, cclname, ccname, 'no_name') AS COMPANY_NAME,                   -- CASO PARA MANEJAR LOS 36 REGISTROS SIN NOMBRE, APELLIDO O NOMBRE DE EMPRESA        
                SUBSTR(cca.cssocialsecno,1,1) AS TIPO_IDENTIFICACION,
                SUBSTR(cca.cssocialsecno,2) AS IDENTIFICACION,
                ZPT.TXTLG AS PLAN_COMERCIAL,
                ZPT.ZSUTIPPRD AS TIPO_PRODUCTO,
                SN.DES AS SERVICE_CODE,
                PSSH.STATUS AS SERVICE_STATUS,
                CANALES.TIPO_ACTIVACION AS TIPO_ACTIVACION,
                CANALES.TIPO_CANAL AS TIPO_CANAL_ACTIVACION,
                CANALES.NOMBRE_CANAL AS CANAL_DE_ACTIVACION,
                TSIM.TIPO_SIMCARD AS TIPO_SIMCARD
            FROM
                etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CUSTOMER_ALL_UP2DT_VIEW CU
            JOIN
                etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CONTRACT_ALL_UP2DT_VIEW CO
            ON
                CO.CUSTOMER_ID = CU.CUSTOMER_ID
            JOIN
                CONTRACT_UNION
            ON
                CONTRACT_UNION.CO_ID = CO.CO_ID

            -- CORRECCIÓN: INNER JOIN → LEFT JOIN 
            LEFT JOIN
                CANALES
            ON
                CANALES.MSISDN = CONTRACT_UNION.MSISDN
            --  CORRECCIÓN: INNER JOIN → LEFT JOIN 

            LEFT JOIN
                TSIM
            ON
                TSIM.PORT_NUM = CONTRACT_UNION.IMSI
            JOIN
                etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_FORCURR_UP2DT_VIEW FC
            ON
                FC.FC_ID = CU.CURRENCY
            JOIN
                etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_BILLCYCLE_ASSIGNMENT_HISTORY_UP2DT_VIEW BAH
            ON
                BAH.CUSTOMER_ID = CU.CUSTOMER_ID
            JOIN
                Ultimo_BAH UB
            ON
                UB.CUSTOMER_ID = CU.CUSTOMER_ID
                AND BAH.SEQNO = UB.MAX_SEQNO
            JOIN
                etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CCONTACT_ALL_UP2DT_VIEW CCA
            ON
                CCA.CUSTOMER_ID = CU.CUSTOMER_ID
                AND CCA.CCSEQ = 1
            JOIN
                SYSADM_PRICEGROUP_ALL PR
            ON
                CU.PRGCODE = PR.PRGCODE
            JOIN
                etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CONTRACT_HISTORY_UP2DT_VIEW CH
            ON
                CH.CO_ID = CONTRACT_UNION.CO_ID
            JOIN
                Ultimo_CH UC
            ON
                UC.CO_ID = CH.CO_ID
                AND CH.CH_SEQNO = UC.MAX_CH_SEQNO
            JOIN
                etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CONTR_SERVICES_PORT_UP2DT_VIEW CSP
            ON
                CSP.CO_ID = CONTRACT_UNION.CO_ID
            JOIN
                etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_CONTR_SERVICES_CAP_UP2DT_VIEW CSC
            ON
                CSC.CO_ID = CONTRACT_UNION.CO_ID
            JOIN
                etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_RATEPLAN_UP2DT_VIEW RP
            ON
                RP.TMCODE = CO.TMCODE

            --  CORRECCIÓN: INNER JOIN → LEFT JOIN         
            LEFT JOIN
                FEINS_LINEA
            ON
                FEINS_LINEA.MSISDN = CONTRACT_UNION.MSISDN            
            --  CORRECCIÓN: INNER JOIN → LEFT JOIN 
        
            LEFT JOIN
                CNTT
            ON
                CNTT.MSISDN = CONTRACT_UNION.MSISDN
            
            --  CORRECCIÓN: INNER JOIN → LEFT JOIN 
            LEFT JOIN
                CIBDUC
            ON
                CIBDUC.MSISDN = CONTRACT_UNION.MSISDN
            JOIN
                etl-service-proj.DWHL_DEV.PLAN_TELEFONIA ZPT
            ON
                ZPT.ZPLANGSM = 'POS' || RP.SHDES
            JOIN
                etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_PR_SERV_STATUS_HIST_UP2DT_VIEW PSSH
            ON
                PSSH.CO_ID = CO.CO_ID
            JOIN
                etl-service-proj.EB20_PROD_Zona_Cruda.SYSADM_MPUSNTAB_UP2DT_VIEW SN
            ON
                SN.SNCODE = PSSH.SNCODE
            JOIN
                Ultimo_PSSH UP
            ON
                UP.CO_ID = PSSH.CO_ID
                AND UP.SNCODE = PSSH.SNCODE
                AND PSSH.HISTNO = UP.MAX_HISTNO
            JOIN
                params
            ON
                DATE(CO.CO_ACTIVATED) <= params.CAL_DATE 
        ) 
    ),

    -- CTE PIVOT DATOS: pivotea SERVICE_CODE en columnas de suspensión
    pivot_datos AS (
        SELECT
            *
        FROM (
            SELECT
                *,
                CASE SERVICE_STATUS
                    WHEN 'A' THEN 'ACTIVE'
                    WHEN 'D' THEN 'DEACTIVE'
                    WHEN 'S' THEN 'SUSPENDED'
                    ELSE ''
                END AS SSTAT
            FROM
                conjunto
        )
        PIVOT(
            MAX(SSTAT) FOR SERVICE_CODE IN (
                'Suspensión por Anulación' AS SA,
                'Suspensión Temporal' AS STDC,
                'Suspensión Robo o Extravío' AS SRE,
                'Suspensión Total (DC)' AS ST,
                'Suspensión por Fraude' AS SPF
            )
        )
    ),
  
    -- CTE DATOS POSTPAGO: arma la vista final por plataforma POSTPAGO
    datos_postpago AS (
        SELECT
            'POSTPAGO' AS plataforma,
            CUSTOMER_ID,
            CUENTA,
            CAST(ID_SUBSCRIPTOR AS INT64) AS CONTRATO_ID,
            CODIGO_VIP,
            DESC_CODIGO_VIP,
            CASE
                WHEN SA = 'ACTIVE' THEN 'Suspensión por Anulación'
                WHEN STDC = 'ACTIVE' THEN 'Suspensión Temporal'
                WHEN SRE = 'ACTIVE' THEN 'Suspensión Robo o Extravio'
                WHEN ST = 'ACTIVE' THEN 'Suspensión Total (DC)'
                WHEN SPF = 'ACTIVE' THEN 'Suspensión por Fraude'
                ELSE 'Servicio Activo'
            END AS ESTATUS_LINEA,
            CAST(FECHA_ACTIVACION AS STRING) AS FECHA_ACTIVACION,
            FECHA_INSTALL_LINEA,
            CANT_TITULARES,
            CURRENCY,
            CICLO_FACTURACION,
            MSISDN,
            IMSI,
            ICCID,
            SIMCARD,
            CODIGO_PLAN,
            PLAN,
            NOMBRES,
            APELLIDOS,
            COMPANY,
            TIPO_IDENTIFICACION,
            IDENTIFICACION,
            PLAN_COMERCIAL,
            TIPO_PRODUCTO,
            NULL AS fe_act_gsm,
            NULL AS estatus,
            TIPO_SIMCARD,
            TIPO_ACTIVACION,
            TIPO_CANAL_ACTIVACION,
            CANAL_DE_ACTIVACION,
            ROW_NUMBER() OVER (PARTITION BY MSISDN ORDER BY FECHA_ACTIVACION DESC) AS rn 
        FROM
            pivot_datos
    )

    -- SELECT final: se filtra rn = 1 para quedarse con la última activación por MSISDN
    SELECT DISTINCT 
        'POSTPAGO' AS PLATAFORMA,
        p.CUSTOMER_ID,
        p.MSISDN,
        p.IMSI,
        p.ICCID,
        p.SIMCARD,
        p.TIPO_SIMCARD,
        p.CANT_TITULARES,
        p.FECHA_ACTIVACION AS FECHA_ACTIVACION_LINEA,
        p.FECHA_INSTALL_LINEA,
        p.ESTATUS_LINEA,
        DATE_DIFF(params.CAL_DATE, DATE(p.FECHA_ACTIVACION), MONTH) AS ANTIGUEDAD_DE_LA_LINEA, 
        CAST(p.CICLO_FACTURACION AS INT64) AS FECHA_CORTE,  
        p.TIPO_ACTIVACION,
        p.CANAL_DE_ACTIVACION,
        p.TIPO_CANAL_ACTIVACION,
        p.CUENTA,
        p.CONTRATO_ID,
        p.CODIGO_PLAN,
        p.PLAN_COMERCIAL,
        p.TIPO_PRODUCTO
    FROM
        datos_postpago p
    CROSS JOIN 
        params 
    WHERE
        p.rn = 1 
